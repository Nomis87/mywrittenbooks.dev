<?php

/**
 * Basemwb_news
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $news_id
 * @property varchar $title
 * @property integer $writer
 * @property timestamp $date
 * @property varchar $news
 * @property mwb_admin $mwb_admin
 * 
 * @method integer   getNewsId()    Returns the current record's "news_id" value
 * @method varchar   getTitle()     Returns the current record's "title" value
 * @method integer   getWriter()    Returns the current record's "writer" value
 * @method timestamp getDate()      Returns the current record's "date" value
 * @method varchar   getNews()      Returns the current record's "news" value
 * @method mwb_admin getMwbAdmin()  Returns the current record's "mwb_admin" value
 * @method mwb_news  setNewsId()    Sets the current record's "news_id" value
 * @method mwb_news  setTitle()     Sets the current record's "title" value
 * @method mwb_news  setWriter()    Sets the current record's "writer" value
 * @method mwb_news  setDate()      Sets the current record's "date" value
 * @method mwb_news  setNews()      Sets the current record's "news" value
 * @method mwb_news  setMwbAdmin()  Sets the current record's "mwb_admin" value
 * 
 * @package    mywrittenbooks.dev
 * @subpackage model
 * @author     Tobias Simon
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Basemwb_news extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('mwb_news');
        $this->hasColumn('news_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('title', 'varchar', 255, array(
             'type' => 'varchar',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('writer', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('date', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('news', 'varchar', 9000, array(
             'type' => 'varchar',
             'notnull' => true,
             'length' => 9000,
             ));


        $this->index('writerindex', array(
             'fields' => 
             array(
              0 => 'writer',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('mwb_admin', array(
             'local' => 'writer',
             'foreign' => 'admin_id',
             'onDelete' => 'cascade'));
    }
}