<?php

/**
 * Basemwb_object
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $object_id
 * @property timestamp $generated_at
 * @property timestamp $updated_at
 * @property string $title
 * @property integer $sites
 * @property string $description
 * @property decimal $price
 * @property integer $writer
 * @property string $picture
 * @property string $documentpath
 * @property integer $genre
 * @property integer $language
 * @property mwb_genre $mwb_genre
 * @property mwb_user $mwb_user
 * @property mwb_language $mwb_language
 * @property Doctrine_Collection $mwb_buydobject_object
 * 
 * @method integer             getObjectId()              Returns the current record's "object_id" value
 * @method timestamp           getGeneratedAt()           Returns the current record's "generated_at" value
 * @method timestamp           getUpdatedAt()             Returns the current record's "updated_at" value
 * @method string              getTitle()                 Returns the current record's "title" value
 * @method integer             getSites()                 Returns the current record's "sites" value
 * @method string              getDescription()           Returns the current record's "description" value
 * @method decimal             getPrice()                 Returns the current record's "price" value
 * @method integer             getWriter()                Returns the current record's "writer" value
 * @method string              getPicture()               Returns the current record's "picture" value
 * @method string              getDocumentpath()          Returns the current record's "documentpath" value
 * @method integer             getGenre()                 Returns the current record's "genre" value
 * @method integer             getLanguage()              Returns the current record's "language" value
 * @method mwb_genre           getMwbGenre()              Returns the current record's "mwb_genre" value
 * @method mwb_user            getMwbUser()               Returns the current record's "mwb_user" value
 * @method mwb_language        getMwbLanguage()           Returns the current record's "mwb_language" value
 * @method Doctrine_Collection getMwbBuydobjectObject()   Returns the current record's "mwb_buydobject_object" collection
 * @method mwb_object          setObjectId()              Sets the current record's "object_id" value
 * @method mwb_object          setGeneratedAt()           Sets the current record's "generated_at" value
 * @method mwb_object          setUpdatedAt()             Sets the current record's "updated_at" value
 * @method mwb_object          setTitle()                 Sets the current record's "title" value
 * @method mwb_object          setSites()                 Sets the current record's "sites" value
 * @method mwb_object          setDescription()           Sets the current record's "description" value
 * @method mwb_object          setPrice()                 Sets the current record's "price" value
 * @method mwb_object          setWriter()                Sets the current record's "writer" value
 * @method mwb_object          setPicture()               Sets the current record's "picture" value
 * @method mwb_object          setDocumentpath()          Sets the current record's "documentpath" value
 * @method mwb_object          setGenre()                 Sets the current record's "genre" value
 * @method mwb_object          setLanguage()              Sets the current record's "language" value
 * @method mwb_object          setMwbGenre()              Sets the current record's "mwb_genre" value
 * @method mwb_object          setMwbUser()               Sets the current record's "mwb_user" value
 * @method mwb_object          setMwbLanguage()           Sets the current record's "mwb_language" value
 * @method mwb_object          setMwbBuydobjectObject()   Sets the current record's "mwb_buydobject_object" collection
 * 
 * @package    mywrittenbooks.dev
 * @subpackage model
 * @author     Tobias Simon
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Basemwb_object extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('mwb_object');
        $this->hasColumn('object_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('generated_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('updated_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('sites', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('description', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 4000,
             ));
        $this->hasColumn('price', 'decimal', 6, array(
             'type' => 'decimal',
             'notnull' => true,
             'length' => 6,
             'scale' => '2',
             ));
        $this->hasColumn('writer', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('picture', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('documentpath', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('genre', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('language', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));


        $this->index('genreindex', array(
             'fields' => 
             array(
              0 => 'genre',
             ),
             ));
        $this->index('userindex', array(
             'fields' => 
             array(
              0 => 'writer',
             ),
             ));
        $this->index('languageindex', array(
             'fields' => 
             array(
              0 => 'language',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('mwb_genre', array(
             'local' => 'genre',
             'foreign' => 'genre_id',
             'onDelete' => 'cascade'));

        $this->hasOne('mwb_user', array(
             'local' => 'writer',
             'foreign' => 'user_id',
             'onDelete' => 'cascade'));

        $this->hasOne('mwb_language', array(
             'local' => 'language',
             'foreign' => 'language_id',
             'onDelete' => 'cascade'));

        $this->hasMany('mwb_boughtObject as mwb_buydobject_object', array(
             'local' => 'object_id',
             'foreign' => 'object'));
    }
}